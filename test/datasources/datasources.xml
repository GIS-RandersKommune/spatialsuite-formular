<?xml version="1.0" encoding="ISO-8859-1"?>
<datasources>

    <endpoint name="formular-test" endpointtype="embedded" displayname="Formular test endpoint">
        <srs>25832</srs>
        <config version="1" requires="1">
            CREATE TABLE formulartest(id varchar(40), formular varchar(255), created timestamp, val0 varchar(255), val1 varchar(255), val2 varchar(255), val3 varchar(255), val4 varchar(255), val5 varchar(255), val6 varchar(255), val7 varchar(255));
        </config>
        <config version="2" requires="1">
            ALTER TABLE formulartest ADD COLUMN name varchar(255);
            ALTER TABLE formulartest ADD COLUMN email varchar(255);
            ALTER TABLE formulartest ADD COLUMN phone varchar(255);
            ALTER TABLE formulartest ADD COLUMN val8 varchar(255);
            ALTER TABLE formulartest ADD COLUMN val9 varchar(255);
            ALTER TABLE formulartest ADD COLUMN wkt CLOB;
        </config>
        <config version="3" requires="1">
            ALTER TABLE formulartest ADD COLUMN approved smallint default 0;
        </config>
        <config version="4" requires="1">
            ALTER TABLE formulartest ADD COLUMN updated timestamp;
        </config>
        
        <config version="5" requires="1">
	        CREATE TABLE poll
			(
			   id varchar(255), 
               formular varchar(255), 
			   journalnr varchar(255), 
			   brugertype varchar(255), 
			   formulartype smallint, 
			   kontakttype smallint, 
			   svar1_1 smallint, 
			   svar1_2 smallint, 
			   svar1_3 smallint, 
			   svar1_4 smallint, 
			   svar1_5 smallint, 
			   svar2_1 smallint, 
			   svar2_2 varchar(255), 
			   svar2_3 smallint, 
			   svar2_4 varchar(255), 
			   svar2_5 smallint, 
			   svar2_6 varchar(255), 
			   svar2_7 smallint, 
			   svar2_8 varchar(255), 
			   svar2_9 varchar(255), 
			   svar2_10 varchar(255), 
			   svar2_11 smallint, 
			   svar2_12 smallint, 
			   kommentar varchar(255), 
			   bilag varchar(255), 
			   navn varchar(255), 
			   string varchar(255), 
			   email varchar(255), 
			   oprettet timestamp
			) 
        </config>

        <config version="6" requires="1">
            CREATE TABLE dates
            (
                id varchar(255),
                date timestamp
            ) 
        </config>

        <config version="7" requires="1">
            CREATE TABLE formulartest_geometry(id varchar(255), created timestamp, wkt CLOB);
        </config>

        <config version="8" requires="1">
            CREATE TABLE validatetable
            (
                val1 varchar(255),
                val2 varchar(255),
                val3 varchar(255),
                val4 varchar(255)
            ) 
        </config>

        <onreload>
            delete from dates;
            insert into dates(id,date) values('a',DATEADD( 'dd', -4, now()));
            insert into dates(id,date) values('b',DATEADD( 'dd', 4, now()));
            insert into dates(id,date) values('c',DATEADD( 'dd', 14, now()));
            insert into dates(id,date) values('d',DATEADD( 'dd', 18, now()));
            insert into dates(id,date) values('f',DATEADD( 'dd', 24, now()));
            delete from validatetable;
            insert into validatetable(val1,val2,val3,val4) values('1','1','Der er tastet 1 og 1 i de to felter','Derfor står der her 2');
        </onreload>
    </endpoint>

    <datasource name="formular-test-validatetable" endpoint="formular-test" displayname="Formular test data (validate datasource)">
        <sql command="read-validate">select val3, val4 from validatetable where val1 = [string: val1] AND val2 = [string: val2];</sql>
    </datasource>

    <datasource name="formular-test-dates" endpoint="formular-test" displayname="Formular test data (datelimit)">
        <sql command="read-dates">select TO_CHAR(date, 'DD.MM.YYYY') as dates from dates;</sql>
    </datasource>

    <datasource name="formular-test" endpoint="formular-test" displayname="Formular test data">
    
        <sql command="read">select * from formulartest;</sql>
        
        <sql command="write">insert into formulartest(id, formular, created, name, email, phone, val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, wkt) 
                                               values(
                                                   [string: sessionid],
                                                   [string: formular], 
                                                   [timestamp: SystemTime()],
                                                   [string: if IsDefined(name)         then name else null endif], 
                                                   [string: if IsDefined(email)        then email else null endif], 
                                                   [string: if IsDefined(phone)        then phone else null endif], 
                                                   [string: if IsDefined(val0)         then val0 else null endif], 
                                                   [string: if IsDefined(val1)         then val1 else null endif], 
                                                   [string: if IsDefined(val2)         then val2 else null endif], 
                                                   [string: if IsDefined(val3)         then val3 else null endif], 
                                                   [string: if IsDefined(val4)         then val4 else null endif], 
                                                   [string: if IsDefined(val5)         then val5 else null endif], 
                                                   [string: if IsDefined(val6)         then val6 else null endif], 
                                                   [string: if IsDefined(val7)         then val7 else null endif], 
                                                   [string: if IsDefined(val8)         then val8 else null endif], 
                                                   [string: if IsDefined(val9)         then val9 else null endif], 
                                                   [string: if IsDefined(wkt)          then wkt else null endif]
                                               );</sql>

        <sql command="booking-read">select id, name, val0 as date, approved from formulartest where formular = [string: formular] order by created DESC</sql>
        <sql command="booking-approve">UPDATE formulartest SET approved = 1, updated = [timestamp: SystemTime()] where ID = [string: id]</sql>
        <sql command="booking-decline">UPDATE formulartest SET approved = -1, updated = [timestamp: SystemTime()] where ID = [string: id]</sql>

        <sql command="read-dropdown">select '' || name as value, name from formulartest where name &lt;&gt; ''</sql>

        <sql command="read-time">select val1 as start, val2 as slut from formulartest where val3 = 'time' AND val0 = [string: date]</sql>

        <debug>false</debug>
    </datasource>

    <datasource name="formular-test-poll" endpoint="formular-test" displayname="Formular test data (poll)">
    
        <sql command="write">insert into poll(id, formular, journalnr, brugertype, formulartype, kontakttype, svar1_1, svar1_2, svar1_3, svar1_4, svar1_5, svar2_1, svar2_2, svar2_3, svar2_4, svar2_5, svar2_6, svar2_7, svar2_8, svar2_9, svar2_10, svar2_11, svar2_12, kommentar, bilag, navn, tlf, email, oprettet) 
                                               values(
                                                   [string: sessionid],
                                                   [string: formular], 
                                                   [string: journalnr],
                                                   [string: brugertype], 
                                                   [number: formulartype], 
                                                   [number: kontakttype], 
                                                   [number: if IsDefined(svar1_1)        then svar1_1 else 0 endif], 
                                                   [number: if IsDefined(svar1_2)        then svar1_2 else 0 endif], 
                                                   [number: if IsDefined(svar1_3)        then svar1_3 else 0 endif], 
                                                   [number: if IsDefined(svar1_4)        then svar1_4 else 0 endif], 
                                                   [number: if IsDefined(svar1_5)        then svar1_5 else 0 endif], 
                                                   [number: if IsDefined(svar2_1)        then svar2_1 else 0 endif], 
                                                   [string: if IsDefined(svar2_2)        then svar2_2 else '' endif], 
                                                   [number: if IsDefined(svar2_3)        then svar2_3 else 0 endif], 
                                                   [string: if IsDefined(svar2_4)        then svar2_4 else '' endif], 
                                                   [number: if IsDefined(svar2_5)        then svar2_5 else 0 endif], 
                                                   [string: if IsDefined(svar2_6)        then svar2_6 else '' endif], 
                                                   [number: if IsDefined(svar2_7)        then svar2_7 else 0 endif],
                                                   [string: if IsDefined(svar2_8)        then svar2_8 else '' endif], 
                                                   [string: if IsDefined(svar2_9)        then svar2_9 else '' endif], 
                                                   [string: if IsDefined(svar2_10)       then svar2_10 else '' endif], 
                                                   [number: if IsDefined(svar2_11)       then svar2_11 else 0 endif],
                                                   [number: if IsDefined(svar2_12)       then svar2_12 else 0 endif],
                                                   [string: if IsDefined(kommentar)      then kommentar else '' endif], 
                                                   [string: if IsDefined(bilag)          then bilag else '' endif], 
                                                   [string: if IsDefined(navn)           then navn else '' endif], 
                                                   [string: if IsDefined(tlf)            then tlf else '' endif], 
                                                   [string: if IsDefined(email)          then email else '' endif], 
                                                   [timestamp: SystemTime()]
                                               );</sql>
    </datasource>

    <datasource name="formular-test-geometry" endpoint="formular-test" displayname="Formular test geometry">
    
        <sql command="read">select * from formulartest_geometry;</sql>
        
        <sql command="write">insert into formulartest_geometry(id, created, wkt) 
                                               values(
                                                   [string: sessionid],
                                                   [timestamp: SystemTime()],
                                                   [string: if IsDefined(wkt)          then wkt else null endif]
                                               );</sql>

        <debug>false</debug>
    </datasource>

</datasources>
